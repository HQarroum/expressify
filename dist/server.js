!function(e,s){if("function"==typeof define&&define.amd)define(["middleware-chain","./request","./response","./event","./resource-manager","./path-to-regexp"],s);else if("undefined"!=typeof module&&module.exports)module.exports=s(require("middleware-chain-js"),require("./request"),require("./response"),require("./event"),require("./resource-manager"),require("./path-to-regexp"));else{var t=this,r=s(t.Chain,t.ExpressifyRequest,t.ExpressifyResponse,t.ExpressifyEvent,t.ExpressifyResourceManager,t.pathToRegexp),i=t[e];r.noConflict=function(){return t[e]=i,r},t[e]=r}}("ExpressifyServer",function(e,s,t,r,i,n){var o=function(){var e=function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)};return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},c=function(e){try{"request"===e.data.type&&this.handle(s.from(this,e),t.fromRequest(this,e))}catch(e){console.log(e.stack)}},u=function(e,s){var t=e.payload.resource,r=o();this.subscribers[t]||(this.subscribers[t]={}),this.subscribers[t][r]||(this.subscribers[t][r]={connection:e.event.source}),s.send(200,{topic:t,id:r})},a=function(s){e.call(this),this.opts=s||{},this.subscribers={},this.resource=new i,this.onMessage=c.bind(this),this.onSubscribe=u.bind(this),this.connection=this.opts.connection||window,this.get("/description",function(e,s){s.send(200,e.app.resource.describe())}).post("/subscription",this.onSubscribe)};return a.prototype=Object.create(e.prototype),a.prototype.register=function(e,s,t,r){return this.resource.add(s,e,r),this.use(function(r,i,o){var c=this.resource.get(s),u=n(s).exec(r.resource),a=!!c&&r.method===e&&!!u;return a?(r.params=function(){return u.slice(1).reduce(function(e,s,t){return c.params[t]&&(e[c.params[t]]=s),e},{})}(),t(r,i,o)):void o()}.bind(this)),this},["get","post","patch","put","head","delete","options"].forEach(function(e){a.prototype[e]=function(s,t,r){return this.register(e,s,t,r)}}),a.prototype.publish=function(e,s){var t=this;Object.keys(this.subscribers[e]||[]).forEach(function(i){t.subscribers[e][i].connection.postMessage(new r({resource:e,payload:s,subscriptionId:i}),"*")})},a.prototype.listen=function(){this.listening||(this.connection.addEventListener("message",this.onMessage),this.listening=!0,parent&&parent.postMessage(new r({resource:"__expressify",payload:{online:!0}}).serialize(),"*"))},a.prototype.close=function(){this.listening&&(this.connection.removeEventListener("message",this.onMessage),this.listening=!1)},a});